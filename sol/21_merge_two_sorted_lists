# Definition for singly-linked list.
class ListNode:
     def __init__(self, val=0, next=None):
         self.val = val
         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        dummy = ListNode(-1) # dummy node
        tail = dummy
        
        while list1 and list2:
            # if list1 val is less than list 2 val
            if list1.val < list2.val:
                # attach the smaller node
                tail.next = list1
                # move list1 forward
                list1 = list1.next
            else:
                tail.next = list2
                list2 = list2.next
            tail = tail.next
        # attach remaining node if any
        tail.next = list1 if list1 else list2

        # merged list starts from dummy.next
        
        return dummy.next
    
# List1 = [1,2,4]
# List2 = [1,3,4]

# dummy -> none
# tail -> dummy

# list1 val = 1
# list2 val = 2

# dummy -> 1 -> None
# tail -> 1
